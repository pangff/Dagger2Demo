// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.pffair.data.repository.module;

import com.pffair.data.repository.datasource.UserDataSource;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class UserRepositoryModule_ProvideUserRemoteDataSourceFactory
    implements Factory<UserDataSource> {
  private final UserRepositoryModule module;

  public UserRepositoryModule_ProvideUserRemoteDataSourceFactory(UserRepositoryModule module) {
    assert module != null;
    this.module = module;
  }

  @Override
  public UserDataSource get() {
    return Preconditions.checkNotNull(
        module.provideUserRemoteDataSource(),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<UserDataSource> create(UserRepositoryModule module) {
    return new UserRepositoryModule_ProvideUserRemoteDataSourceFactory(module);
  }

  /** Proxies {@link UserRepositoryModule#provideUserRemoteDataSource()}. */
  public static UserDataSource proxyProvideUserRemoteDataSource(UserRepositoryModule instance) {
    return instance.provideUserRemoteDataSource();
  }
}
