// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.pffair.data.repository;

import com.pffair.data.repository.datasource.BookDataSource;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class BookRepository_Factory implements Factory<BookRepository> {
  private final Provider<BookDataSource> bookRemoteDataSourceProvider;

  private final Provider<BookDataSource> bookLocalDataSourceProvider;

  public BookRepository_Factory(
      Provider<BookDataSource> bookRemoteDataSourceProvider,
      Provider<BookDataSource> bookLocalDataSourceProvider) {
    assert bookRemoteDataSourceProvider != null;
    this.bookRemoteDataSourceProvider = bookRemoteDataSourceProvider;
    assert bookLocalDataSourceProvider != null;
    this.bookLocalDataSourceProvider = bookLocalDataSourceProvider;
  }

  @Override
  public BookRepository get() {
    return new BookRepository(
        bookRemoteDataSourceProvider.get(), bookLocalDataSourceProvider.get());
  }

  public static Factory<BookRepository> create(
      Provider<BookDataSource> bookRemoteDataSourceProvider,
      Provider<BookDataSource> bookLocalDataSourceProvider) {
    return new BookRepository_Factory(bookRemoteDataSourceProvider, bookLocalDataSourceProvider);
  }
}
